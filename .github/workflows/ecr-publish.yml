name: Deploy Backend to Amazon ECR

on:
  push:
    branches: [ "feature/infra" ]

env:
  ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  ECR_REPOSITORY: srg/backend # ECR에 생성한 백엔드 리포지토리 이름
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push-to-ecr:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: ./ # 백엔드 프로젝트 루트 디렉토리

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./ # 백엔드 프로젝트 루트 디렉토리

      # AWS 인증 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 7. Docker 이미지 빌드 & 푸시
      - name: Build and Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/srg/backend:$IMAGE_TAG ./backend
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/srg/backend:$IMAGE_TAG
      # 8. kubeconfig 업데이트
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-northeast-2 --name eks-cluster

      # 9. Deployment 이미지 업데이트 및 롤아웃 확인
      - name: Update backend Deployment image
        run: |
          IMAGE_TAG=${{ github.sha }}
          kubectl set image deployment/backend backend=${{ secrets.AWS_ECR_REGISTRY }}/srg/backend:$IMAGE_TAG --namespace=default
          kubectl rollout status deployment/backend --namespace=default
