name: Deploy Backend to Amazon ECR

on:
  push:
    branches: [ "feature/infra" ]

env:
  ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  ECR_REPOSITORY: srg/backend
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read

jobs:
  build-and-push-to-ecr:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle 캐시 적용
      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper       # wrapper → 소스 코드 변경과 무관, 거의 항상 재사용
            ~/.gradle/caches        # dependency 캐시
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY=srg/backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-northeast-2 --name eks-cluster

      - name: Update backend Deployment image
        run: |
          IMAGE_TAG=${{ github.sha }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          kubectl set image deployment/backend backend=$ECR_REGISTRY/srg/backend:$IMAGE_TAG --namespace=default
          kubectl rollout status deployment/backend --namespace=default
